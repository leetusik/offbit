"""init

Revision ID: b1bd1aff0293
Revises: 
Create Date: 2024-10-24 23:44:16.178718

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b1bd1aff0293'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('coin', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_coin_name'), ['name'], unique=True)

    op.create_table('strategy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('historical_data', sa.LargeBinary(), nullable=True),
    sa.Column('short_historical_data', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('strategy', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_strategy_name'), ['name'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('open_api_key_access_upbit', sa.LargeBinary(), nullable=True),
    sa.Column('open_api_key_secret_upbit', sa.LargeBinary(), nullable=True),
    sa.Column('open_api_key_expiration', sa.DateTime(), nullable=True),
    sa.Column('verification_code', sa.Integer(), nullable=True),
    sa.Column('verification_code_expiration', sa.DateTime(), nullable=True),
    sa.Column('membership_type', sa.Enum('BIKE', 'MOTORCYCLE', 'CAR', 'AIRPLANE', name='membershiptype'), nullable=False),
    sa.Column('membership_expiration', sa.DateTime(), nullable=True),
    sa.Column('available', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=False)

    op.create_table('coin_strategies',
    sa.Column('coin_id', sa.Integer(), nullable=False),
    sa.Column('strategy_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['coin_id'], ['coin.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategy.id'], ),
    sa.PrimaryKeyConstraint('coin_id', 'strategy_id')
    )
    op.create_table('user_strategy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('strategy_id', sa.Integer(), nullable=False),
    sa.Column('coin_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('execution_time', sa.Time(), nullable=True),
    sa.Column('_investing_limit', sa.Integer(), nullable=False),
    sa.Column('holding_position', sa.Boolean(), nullable=False),
    sa.Column('sell_needed', sa.Float(), nullable=False),
    sa.Column('historical_data_resampled', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['coin_id'], ['coin.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategy.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_strategy')
    op.drop_table('coin_strategies')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('strategy', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_strategy_name'))

    op.drop_table('strategy')
    with op.batch_alter_table('coin', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_coin_name'))

    op.drop_table('coin')
    # ### end Alembic commands ###
